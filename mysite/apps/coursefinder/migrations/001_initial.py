# Generated by Django 5.2.5 on 2025-08-27 18:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("course_type", models.CharField(blank=True, max_length=50)),
                ("duration", models.CharField(blank=True, max_length=50)),
                ("mode", models.CharField(blank=True, max_length=30)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("start_date", models.CharField(blank=True, max_length=50)),
                ("link", models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="University",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("website", models.URLField(blank=True)),
                ("all_courses_url", models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="EntryRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min_ucas_points", models.IntegerField(db_index=True, default=0)),
                ("min_grade_required", models.CharField(blank=True, max_length=2)),
                ("display_grades", models.CharField(blank=True, max_length=50)),
                ("btec_grades", models.CharField(blank=True, max_length=20)),
                ("accepts_ucas", models.BooleanField(default=True)),
                ("has_requirements", models.BooleanField(default=True)),
                (
                    "course",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coursefinder.course",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="university",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="coursefinder.university",
            ),
        ),
        migrations.CreateModel(
            name="SubjectRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=100)),
                ("grade", models.CharField(max_length=2)),
                (
                    "entry_requirement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subject_requirements",
                        to="coursefinder.entryrequirement",
                    ),
                ),
            ],
            options={
                "unique_together": {("entry_requirement", "subject")},
            },
        ),
    ]
